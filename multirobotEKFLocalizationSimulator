import numpy as np
import math
from Robot import Robot


def getRangeBearingMeasurements(observingRobot, observedRobot):
    
    # Simulate rho,phi measurements with errors
    # Assume the moving robot is taking the measurements
    rho = math.sqrt((observedRobot.actualPose[-1][0]-observingRobot.actualPose[-1][0])**2 +           \
                    (observedRobot.actualPose[-1][1]-observingRobot.actualPose[-1][1])**2)+           \
                     np.random.normal(0, observingRobot.deltaRHO)
    
    phi = math.atan2(observedRobot.actualPose[-1][1]-observingRobot.actualPose[-1][1],                \
                     observedRobot.actualPose[-1][0]-observingRobot.actualPose[-1][0]) -              \
                     observingRobot.actualPose[-1][2] + np.random.normal(0, observingRobot.deltaPHI)     
    
    phi = 2*math.pi + phi
       
    return rho, phi

# Estimate Theta (Angle with respect to global x axis) 
# of the moved Robot using Relative Observations between moved robot and stationary robot
def getThetaMovedRobot(phiMovedRobot,thetaStationaryRobot,phiStationaryRobot):
    thetaPlusPhiStationaryRobot = (thetaStationaryRobot + phiStationaryRobot)
    
    if(thetaPlusPhiStationaryRobot<=math.pi):
        return (2*math.pi +(math.pi + thetaPlusPhiStationaryRobot  - phiMovedRobot))%(2*math.pi)
    else:
        return (2*math.pi +(-math.pi + thetaPlusPhiStationaryRobot - phiMovedRobot))%(2*math.pi)

# Get the angle of the moved robot with respect to the stationary robot
def getThetaDifference(thetaMovedRobot, thetaStationaryRobot):
    return (2*math.pi + (thetaMovedRobot-thetaStationaryRobot))%(2*math.pi)


    
   
#################################################### 
# TESTING AREA
####################################################

# Create two test robots
movedRobot          = Robot(np.array([-1,-1,(math.pi)/2]))
stationaryRobot     = Robot(np.array([0,1,(math.pi)/3]))

# Get relative Range Bearing Measurements
rhoMovedRobot,phiMovedRobot           = getRangeBearingMeasurements(movedRobot, stationaryRobot)
rhoStationaryRobot,phiStationaryRobot = getRangeBearingMeasurements(stationaryRobot,movedRobot)

# Estimate Theta of the moved Robot
thetaStationaryRobot = stationaryRobot.estimatedPose[-1][2]
thetaMovedRobot      = getThetaMovedRobot(phiMovedRobot,thetaStationaryRobot,phiStationaryRobot)
print("Moved Robot RHO,PHI:",rhoMovedRobot,phiMovedRobot)
print("Stationary Robot RHO,PHI:",rhoStationaryRobot,phiStationaryRobot)
print("Moved Robot Theta w.r.t Global Frame:",thetaMovedRobot)


print("Moved Robot Theta w.r.t Stationary Robot:",getThetaDifference(thetaMovedRobot, thetaStationaryRobot))